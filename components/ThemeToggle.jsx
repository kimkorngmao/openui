import { useTheme } from '@/context/ThemeContext';
import React, { useEffect, useState } from 'react';

export const ThemeToggle = () => {
    const { theme, toggleTheme } = useTheme();
    const [isMounted, setIsMounted] = useState(false);

    // Ensures component is rendered only on the client side
    useEffect(() => {
        setIsMounted(true);
    }, []);

    if (!isMounted) return null; // Prevent render mismatch during initial SSR pass

    return (
        <button
            onClick={toggleTheme}
            className="p-1 rounded-lg bg-gray-100 hover:bg-gray-200 dark:text-white dark:bg-gray-800 dark:hover:bg-gray-700"
            aria-label="Toggle theme"
        >
            {theme === 'light' ? (
                <svg
                    xmlns="http://www.w3.org/2000/svg"
                    viewBox="0 0 24 24"
                    fill="currentColor"
                    className="size-5 transition-transform duration-300 ease-in-out transform rotate-0"
                >
                    <path
                        fillRule="evenodd"
                        d="M9.528 1.718a.75.75 0 01.162.819A8.97 8.97 0 009 6a9 9 0 009 9 8.97 8.97 0 003.463-.69.75.75 0 01.981.98 10.503 10.503 0 01-9.694 6.46c-5.799 0-10.5-4.701-10.5-10.5 0-4.368 2.667-8.112 6.46-9.694a.75.75 0 01.818.162z"
                        clipRule="evenodd"
                    />
                </svg>
            ) : (
                <svg className="size-5 transition-transform duration-300 ease-in-out transform rotate-180" viewBox="0 0 24 24" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path d="M12 1.5C12.2142 1.5 12.4197 1.5851 12.5711 1.73657C12.7226 1.88804 12.8077 2.09348 12.8077 2.30769V4.73077C12.8077 4.94498 12.7226 5.15042 12.5711 5.30189C12.4197 5.45337 12.2142 5.53846 12 5.53846C11.7858 5.53846 11.5803 5.45337 11.4289 5.30189C11.2774 5.15042 11.1923 4.94498 11.1923 4.73077V2.30769C11.1923 2.09348 11.2774 1.88804 11.4289 1.73657C11.5803 1.5851 11.7858 1.5 12 1.5ZM7.15385 12C7.15385 10.7147 7.66442 9.48208 8.57325 8.57325C9.48208 7.66442 10.7147 7.15385 12 7.15385C13.2853 7.15385 14.5179 7.66442 15.4267 8.57325C16.3356 9.48208 16.8462 10.7147 16.8462 12C16.8462 13.2853 16.3356 14.5179 15.4267 15.4267C14.5179 16.3356 13.2853 16.8462 12 16.8462C10.7147 16.8462 9.48208 16.3356 8.57325 15.4267C7.66442 14.5179 7.15385 13.2853 7.15385 12ZM19.4243 5.71723C19.567 5.56412 19.6447 5.36161 19.641 5.15236C19.6373 4.94311 19.5525 4.74347 19.4045 4.59548C19.2565 4.4475 19.0569 4.36273 18.8476 4.35904C18.6384 4.35535 18.4359 4.43302 18.2828 4.57569L16.5694 6.288C16.4922 6.36247 16.4306 6.45157 16.3883 6.55009C16.3459 6.64861 16.3236 6.75458 16.3226 6.86183C16.3216 6.96907 16.342 7.07544 16.3825 7.17472C16.4231 7.274 16.483 7.36421 16.5588 7.44008C16.6346 7.51595 16.7248 7.57597 16.824 7.61663C16.9233 7.65728 17.0296 7.67777 17.1369 7.67689C17.2441 7.67601 17.3501 7.65378 17.4487 7.61149C17.5472 7.56921 17.6364 7.50772 17.7109 7.43062L19.4243 5.71723ZM22.5 12C22.5 12.2142 22.4149 12.4197 22.2634 12.5711C22.112 12.7226 21.9065 12.8077 21.6923 12.8077H19.2692C19.055 12.8077 18.8496 12.7226 18.6981 12.5711C18.5466 12.4197 18.4615 12.2142 18.4615 12C18.4615 11.7858 18.5466 11.5803 18.6981 11.4289C18.8496 11.2774 19.055 11.1923 19.2692 11.1923H21.6923C21.9065 11.1923 22.112 11.2774 22.2634 11.4289C22.4149 11.5803 22.5 11.7858 22.5 12ZM18.2828 19.4243C18.4359 19.567 18.6384 19.6447 18.8476 19.641C19.0569 19.6373 19.2565 19.5525 19.4045 19.4045C19.5525 19.2565 19.6373 19.0569 19.641 18.8476C19.6447 18.6384 19.567 18.4359 19.4243 18.2828L17.712 16.5694C17.6375 16.4922 17.5484 16.4306 17.4499 16.3883C17.3514 16.3459 17.2454 16.3236 17.1382 16.3226C17.0309 16.3216 16.9246 16.342 16.8253 16.3825C16.726 16.4231 16.6358 16.483 16.5599 16.5588C16.484 16.6346 16.424 16.7248 16.3834 16.824C16.3427 16.9233 16.3222 17.0296 16.3231 17.1369C16.324 17.2441 16.3462 17.3501 16.3885 17.4487C16.4308 17.5472 16.4923 17.6364 16.5694 17.7109L18.2828 19.4243ZM12 18.4615C12.2142 18.4615 12.4197 18.5466 12.5711 18.6981C12.7226 18.8496 12.8077 19.055 12.8077 19.2692V21.6923C12.8077 21.9065 12.7226 22.112 12.5711 22.2634C12.4197 22.4149 12.2142 22.5 12 22.5C11.7858 22.5 11.5803 22.4149 11.4289 22.2634C11.2774 22.112 11.1923 21.9065 11.1923 21.6923V19.2692C11.1923 19.055 11.2774 18.8496 11.4289 18.6981C11.5803 18.5466 11.7858 18.4615 12 18.4615ZM7.43169 17.7109C7.57875 17.5585 7.66007 17.3545 7.65813 17.1427C7.65619 16.9309 7.57115 16.7284 7.42132 16.5787C7.2715 16.429 7.06888 16.3442 6.8571 16.3424C6.64533 16.3407 6.44134 16.4222 6.28908 16.5694L4.57569 18.2817C4.42849 18.434 4.34698 18.6379 4.34872 18.8497C4.35046 19.0615 4.43531 19.2641 4.58499 19.4139C4.73468 19.5638 4.93722 19.6488 5.14899 19.6507C5.36077 19.6527 5.56483 19.5714 5.71723 19.4243L7.43062 17.712L7.43169 17.7109ZM5.53846 12C5.53846 12.2142 5.45337 12.4197 5.30189 12.5711C5.15042 12.7226 4.94498 12.8077 4.73077 12.8077H2.30769C2.09348 12.8077 1.88804 12.7226 1.73657 12.5711C1.5851 12.4197 1.5 12.2142 1.5 12C1.5 11.7858 1.5851 11.5803 1.73657 11.4289C1.88804 11.2774 2.09348 11.1923 2.30769 11.1923H4.73077C4.94498 11.1923 5.15042 11.2774 5.30189 11.4289C5.45337 11.5803 5.53846 11.7858 5.53846 12ZM6.28908 7.43062C6.44219 7.57329 6.6447 7.65096 6.85395 7.64727C7.06319 7.64357 7.26284 7.55881 7.41082 7.41082C7.55881 7.26284 7.64357 7.06319 7.64727 6.85395C7.65096 6.6447 7.57329 6.44219 7.43062 6.28908L5.71831 4.57569C5.56604 4.42849 5.36206 4.34698 5.15028 4.34872C4.93851 4.35046 4.73589 4.43531 4.58606 4.58499C4.43624 4.73468 4.3512 4.93722 4.34926 5.14899C4.34732 5.36077 4.42863 5.56483 4.57569 5.71723L6.28908 7.43062Z"/>
                </svg>
            )}
        </button>
    );
};
